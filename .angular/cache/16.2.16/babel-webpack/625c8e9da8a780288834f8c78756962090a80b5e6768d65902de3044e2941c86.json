{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nexport let PersonTableComponent = class PersonTableComponent {\n  constructor(personService, router) {\n    this.personService = personService;\n    this.router = router;\n    this.people = [];\n  }\n  editPerson(id) {\n    this.router.navigate(['/person-form', id]);\n  }\n  deletePerson(id) {\n    if (confirm('Tem certeza que deseja excluir esta pessoa?')) {\n      this.personService.deletePerson(id).subscribe(() => {\n        this.people = this.people.filter(person => person.id !== id);\n      });\n    }\n  }\n  addPerson() {\n    this.router.navigate(['/person-form']); // Redireciona para a página de cadastro\n  }\n};\n\n__decorate([Input()], PersonTableComponent.prototype, \"people\", void 0);\nPersonTableComponent = __decorate([Component({\n  selector: 'app-person-table',\n  templateUrl: './person-table.component.html',\n  styleUrls: ['./person-table.component.scss']\n})], PersonTableComponent);","map":{"version":3,"names":["Component","Input","PersonTableComponent","constructor","personService","router","people","editPerson","id","navigate","deletePerson","confirm","subscribe","filter","person","addPerson","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Asus\\Desktop\\ContactList-Front-end-main\\src\\app\\components\\person-table\\person-table.component.ts"],"sourcesContent":["import { Component, Input } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { PersonService } from '../../services/person.service';\r\nimport { Person } from '../../models/person';\r\n\r\n@Component({\r\n  selector: 'app-person-table',\r\n  templateUrl: './person-table.component.html',\r\n  styleUrls: ['./person-table.component.scss']\r\n})\r\nexport class PersonTableComponent {\r\n  @Input() people: Person[] = [];\r\n\r\n  constructor(private personService: PersonService, private router: Router) {}\r\n\r\n  editPerson(id: number): void {\r\n    this.router.navigate(['/person-form', id]);\r\n  }\r\n\r\n  deletePerson(id: number): void {\r\n    if (confirm('Tem certeza que deseja excluir esta pessoa?')) {\r\n      this.personService.deletePerson(id).subscribe(() => {\r\n        this.people = this.people.filter(person => person.id !== id);\r\n      });\r\n    }\r\n  }\r\n\r\n  addPerson(): void {\r\n    this.router.navigate(['/person-form']); // Redireciona para a página de cadastro\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAQ,eAAe;AAUzC,WAAMC,oBAAoB,GAA1B,MAAMA,oBAAoB;EAG/BC,YAAoBC,aAA4B,EAAUC,MAAc;IAApD,KAAAD,aAAa,GAAbA,aAAa;IAAyB,KAAAC,MAAM,GAANA,MAAM;IAFvD,KAAAC,MAAM,GAAa,EAAE;EAE6C;EAE3EC,UAAUA,CAACC,EAAU;IACnB,IAAI,CAACH,MAAM,CAACI,QAAQ,CAAC,CAAC,cAAc,EAAED,EAAE,CAAC,CAAC;EAC5C;EAEAE,YAAYA,CAACF,EAAU;IACrB,IAAIG,OAAO,CAAC,6CAA6C,CAAC,EAAE;MAC1D,IAAI,CAACP,aAAa,CAACM,YAAY,CAACF,EAAE,CAAC,CAACI,SAAS,CAAC,MAAK;QACjD,IAAI,CAACN,MAAM,GAAG,IAAI,CAACA,MAAM,CAACO,MAAM,CAACC,MAAM,IAAIA,MAAM,CAACN,EAAE,KAAKA,EAAE,CAAC;MAC9D,CAAC,CAAC;;EAEN;EAEAO,SAASA,CAAA;IACP,IAAI,CAACV,MAAM,CAACI,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;EAC1C;CACD;;AAnBUO,UAAA,EAARf,KAAK,EAAE,C,mDAAuB;AADpBC,oBAAoB,GAAAc,UAAA,EALhChB,SAAS,CAAC;EACTiB,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWjB,oBAAoB,CAoBhC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}