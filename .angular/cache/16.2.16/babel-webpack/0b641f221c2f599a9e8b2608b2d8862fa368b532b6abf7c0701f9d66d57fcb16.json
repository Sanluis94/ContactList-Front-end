{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/person.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common/http\";\nimport * as i5 from \"@angular/common\";\nfunction PersonFormComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Email inv\\u00E1lido \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PersonFormComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" O telefone deve ter 10 ou 11 d\\u00EDgitos num\\u00E9ricos. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PersonFormComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Tipo de contato \\u00E9 obrigat\\u00F3rio. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class PersonFormComponent {\n  constructor(fb, personService, route, router, http) {\n    this.fb = fb;\n    this.personService = personService;\n    this.route = route;\n    this.router = router;\n    this.http = http;\n    this.isEditing = false;\n    this.personForm = this.fb.group({\n      active: [true],\n      address: ['', Validators.required],\n      city: ['', Validators.required],\n      contactType: [null, Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      name: ['', Validators.required],\n      phone: ['', [Validators.required, Validators.pattern('^[0-9]{10,11}$')]],\n      state: ['', Validators.required],\n      zipCode: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(8)]]\n    });\n  }\n  ngOnInit() {\n    this.personId = Number(this.route.snapshot.paramMap.get('id'));\n    if (this.personId) {\n      this.isEditing = true;\n      this.personService.getPersonById(this.personId).subscribe(person => {\n        this.personForm.reset(person);\n      });\n    }\n  }\n  onSubmit() {\n    if (this.personForm.invalid) {\n      this.personForm.markAllAsTouched();\n      return;\n    }\n    const person = this.personForm.value;\n    console.log('Enviando para a API:', JSON.stringify(person, null, 2));\n    const confirmation = window.confirm('Tem certeza que deseja atualizar esta pessoa?');\n    if (confirmation) {\n      if (this.isEditing) {\n        this.personService.updatePerson(this.personId, person).subscribe({\n          next: response => {\n            console.log('Pessoa atualizada com sucesso:', response);\n            alert('Pessoa atualizada com sucesso!');\n            this.router.navigate(['/person-table']);\n          },\n          error: err => {\n            console.error('Erro ao atualizar pessoa:', err);\n            alert('Erro ao atualizar pessoa. Tente novamente.');\n          }\n        });\n      } else {\n        this.personService.createPerson(person).subscribe({\n          next: () => {\n            console.log('Pessoa criada com sucesso:', person);\n            this.router.navigate(['/person-table']);\n          },\n          error: err => {\n            console.error('Erro ao criar pessoa:', err);\n            alert('Erro ao criar pessoa. Tente novamente.');\n          }\n        });\n      }\n    }\n  }\n  fetchAddress() {\n    const zipCode = this.personForm.get('zipCode')?.value;\n    if (zipCode.length === 8) {\n      this.http.get(`https://viacep.com.br/ws/${zipCode}/json/`).subscribe(data => {\n        if (!data.erro) {\n          this.personForm.patchValue({\n            address: `${data.logradouro}, ${data.bairro}`,\n            city: data.localidade,\n            state: data.uf\n          });\n        }\n      });\n    }\n  }\n  onCancel() {\n    this.router.navigate(['/person-table']);\n  }\n  static {\n    this.ɵfac = function PersonFormComponent_Factory(t) {\n      return new (t || PersonFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.PersonService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PersonFormComponent,\n      selectors: [[\"app-person-form\"]],\n      decls: 50,\n      vars: 10,\n      consts: [[1, \"container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"id\", \"name\", \"formControlName\", \"name\", \"type\", \"text\", \"required\", \"\"], [\"for\", \"email\"], [\"id\", \"email\", \"formControlName\", \"email\", \"type\", \"email\", \"required\", \"\"], [\"class\", \"error-message\", 4, \"ngIf\"], [\"for\", \"phone\"], [\"id\", \"phone\", \"formControlName\", \"phone\", \"type\", \"text\", \"required\", \"\"], [\"for\", \"contactType\"], [\"id\", \"contactType\", \"formControlName\", \"contactType\"], [3, \"ngValue\"], [\"for\", \"zipCode\"], [\"id\", \"zipCode\", \"formControlName\", \"zipCode\", \"type\", \"text\", \"required\", \"\", 3, \"blur\"], [\"for\", \"address\"], [\"id\", \"address\", \"formControlName\", \"address\", \"type\", \"text\", \"required\", \"\"], [\"for\", \"city\"], [\"id\", \"city\", \"formControlName\", \"city\", \"type\", \"text\", \"required\", \"\"], [\"for\", \"state\"], [\"id\", \"state\", \"formControlName\", \"state\", \"type\", \"text\", \"required\", \"\"], [1, \"button-group\"], [\"type\", \"submit\", 1, \"save-btn\", 3, \"disabled\"], [\"type\", \"button\", 1, \"cancel-btn\", 3, \"click\"], [1, \"error-message\"]],\n      template: function PersonFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function PersonFormComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n          i0.ɵɵtext(10, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 6);\n          i0.ɵɵtemplate(12, PersonFormComponent_div_12_Template, 2, 0, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 2)(14, \"label\", 8);\n          i0.ɵɵtext(15, \"Contact Number\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"input\", 9);\n          i0.ɵɵtemplate(17, PersonFormComponent_div_17_Template, 2, 0, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(18, \"div\", 2)(19, \"label\", 10);\n          i0.ɵɵtext(20, \"Contact Type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"select\", 11)(22, \"option\", 12);\n          i0.ɵɵtext(23, \"Telefone\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"option\", 12);\n          i0.ɵɵtext(25, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"option\", 12);\n          i0.ɵɵtext(27, \"Endere\\u00E7o\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(28, PersonFormComponent_div_28_Template, 2, 0, \"div\", 7);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"div\", 2)(30, \"label\", 13);\n          i0.ɵɵtext(31, \"zipCode\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"input\", 14);\n          i0.ɵɵlistener(\"blur\", function PersonFormComponent_Template_input_blur_32_listener() {\n            return ctx.fetchAddress();\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(33, \"div\", 2)(34, \"label\", 15);\n          i0.ɵɵtext(35, \"Address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(36, \"input\", 16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(37, \"div\", 2)(38, \"label\", 17);\n          i0.ɵɵtext(39, \"City\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(40, \"input\", 18);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(41, \"div\", 2)(42, \"label\", 19);\n          i0.ɵɵtext(43, \"State\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(44, \"input\", 20);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(45, \"div\", 21)(46, \"button\", 22);\n          i0.ɵɵtext(47);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(48, \"button\", 23);\n          i0.ɵɵlistener(\"click\", function PersonFormComponent_Template_button_click_48_listener() {\n            return ctx.onCancel();\n          });\n          i0.ɵɵtext(49, \"Cancel\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_7_0;\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate(ctx.isEditing ? \"Edit Person\" : \"Add Person\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"formGroup\", ctx.personForm);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.personForm.get(\"email\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.personForm.get(\"email\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.personForm.get(\"phone\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.personForm.get(\"phone\")) == null ? null : tmp_3_0.touched));\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngValue\", 1);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngValue\", 2);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngValue\", 3);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ((tmp_7_0 = ctx.personForm.get(\"contactType\")) == null ? null : tmp_7_0.invalid) && ((tmp_7_0 = ctx.personForm.get(\"contactType\")) == null ? null : tmp_7_0.touched));\n          i0.ɵɵadvance(18);\n          i0.ɵɵproperty(\"disabled\", ctx.personForm.invalid);\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\" \", ctx.isEditing ? \"Update\" : \"Save\", \" \");\n        }\n      },\n      dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\".container[_ngcontent-%COMP%] {\\n  background: white;\\n  border-radius: 10px;\\n  padding: 20px;\\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\\n}\\n\\nh2[_ngcontent-%COMP%] {\\n  color: #4CAF50;\\n  margin-bottom: 15px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin-bottom: 15px;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n  color: #2E7D32;\\n  display: block;\\n  margin-bottom: 5px;\\n}\\n\\ninput[_ngcontent-%COMP%], select[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 10px;\\n  border: 1px solid #E0E0E0;\\n  border-radius: 5px;\\n  font-size: 16px;\\n}\\n\\ninput[_ngcontent-%COMP%]:focus, select[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border-color: #4CAF50;\\n  box-shadow: 0px 0px 5px rgba(76, 175, 80, 0.5);\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  border: none;\\n  padding: 10px 16px;\\n  cursor: pointer;\\n  font-size: 16px;\\n  font-weight: bold;\\n  border-radius: 5px;\\n  transition: all 0.3s ease;\\n}\\n\\n.save-btn[_ngcontent-%COMP%] {\\n  background: #4CAF50;\\n  color: white;\\n}\\n\\n.save-btn[_ngcontent-%COMP%]:hover {\\n  background: #3d8b40;\\n}\\n\\n.save-btn[_ngcontent-%COMP%]:disabled {\\n  background-color: #92cf94;\\n  cursor: not-allowed;\\n}\\n\\n.cancel-btn[_ngcontent-%COMP%] {\\n  background: #D32F2F;\\n  color: white;\\n}\\n\\n.cancel-btn[_ngcontent-%COMP%]:hover {\\n  background: #B71C1C;\\n}\\n\\n.button-group[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-between;\\n  gap: 10px;\\n}\\n\\n@media (max-width: 480px) {\\n  .button-group[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n  }\\n  button[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n}\\n@media (max-width: 768px) {\\n  input[_ngcontent-%COMP%], select[_ngcontent-%COMP%] {\\n    font-size: 14px;\\n    padding: 8px;\\n  }\\n  button[_ngcontent-%COMP%] {\\n    padding: 8px 12px;\\n    font-size: 14px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9wZXJzb24tZm9ybS9wZXJzb24tZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFRQTtFQUNFLGlCQUFBO0VBQ0EsbUJBQUE7RUFDQSxhQUFBO0VBQ0EsMENBQUE7QUFQRjs7QUFVQTtFQUNFLGNBaEJjO0VBaUJkLG1CQUFBO0FBUEY7O0FBVUE7RUFDRSxtQkFBQTtBQVBGOztBQVVBO0VBQ0UsaUJBQUE7RUFDQSxjQXpCZ0I7RUEwQmhCLGNBQUE7RUFDQSxrQkFBQTtBQVBGOztBQVVBO0VBQ0UsV0FBQTtFQUNBLGFBQUE7RUFDQSx5QkFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQVBGOztBQVVBO0VBQ0UsYUFBQTtFQUNBLHFCQXpDYztFQTBDZCw4Q0FBQTtBQVBGOztBQVVBO0VBQ0UsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGtCQUFBO0VBQ0EseUJBQUE7QUFQRjs7QUFVQTtFQUNFLG1CQXhEYztFQXlEZCxZQUFBO0FBUEY7O0FBVUE7RUFDRSxtQkFBQTtBQVBGOztBQVVBO0VBQ0UseUJBQUE7RUFDQSxtQkFBQTtBQVBGOztBQVVBO0VBQ0UsbUJBakVhO0VBa0ViLFlBQUE7QUFQRjs7QUFVQTtFQUNFLG1CQXJFYTtBQThEZjs7QUFVQTtFQUNFLGFBQUE7RUFDQSw4QkFBQTtFQUNBLFNBQUE7QUFQRjs7QUFVQTtFQUNFO0lBQ0Usc0JBQUE7RUFQRjtFQVVBO0lBQ0UsV0FBQTtFQVJGO0FBQ0Y7QUFXQTtFQUNFO0lBQ0UsZUFBQTtJQUNBLFlBQUE7RUFURjtFQVlBO0lBQ0UsaUJBQUE7SUFDQSxlQUFBO0VBVkY7QUFDRiIsInNvdXJjZXNDb250ZW50IjpbIiRwcmltYXJ5LWNvbG9yOiAjNENBRjUwO1xyXG4kc2Vjb25kYXJ5LWNvbG9yOiAjMkU3RDMyO1xyXG4kYmFja2dyb3VuZC1jb2xvcjogI0Y0RjdGNjtcclxuJGhvdmVyLWNvbG9yOiAjQzhFNkM5O1xyXG4kYm9yZGVyLWNvbG9yOiAjRTBFMEUwO1xyXG4kZGFuZ2VyLWNvbG9yOiAjRDMyRjJGO1xyXG4kZGFuZ2VyLWhvdmVyOiAjQjcxQzFDO1xyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGJveC1zaGFkb3c6IDBweCA0cHggOHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxufVxyXG5cclxuaDIge1xyXG4gIGNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcblxyXG4uZm9ybS1ncm91cCB7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxufVxyXG5cclxubGFiZWwge1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGNvbG9yOiAkc2Vjb25kYXJ5LWNvbG9yO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1ib3R0b206IDVweDtcclxufVxyXG5cclxuaW5wdXQsIHNlbGVjdCB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAkYm9yZGVyLWNvbG9yO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBmb250LXNpemU6IDE2cHg7XHJcbn1cclxuXHJcbmlucHV0OmZvY3VzLCBzZWxlY3Q6Zm9jdXMge1xyXG4gIG91dGxpbmU6IG5vbmU7XHJcbiAgYm9yZGVyLWNvbG9yOiAkcHJpbWFyeS1jb2xvcjtcclxuICBib3gtc2hhZG93OiAwcHggMHB4IDVweCByZ2JhKDc2LCAxNzUsIDgwLCAwLjUpO1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBwYWRkaW5nOiAxMHB4IDE2cHg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGZvbnQtc2l6ZTogMTZweDtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcclxufVxyXG5cclxuLnNhdmUtYnRuIHtcclxuICBiYWNrZ3JvdW5kOiAkcHJpbWFyeS1jb2xvcjtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5zYXZlLWJ0bjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZDogZGFya2VuKCRwcmltYXJ5LWNvbG9yLCAxMCUpO1xyXG59XHJcblxyXG4uc2F2ZS1idG46ZGlzYWJsZWQge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oJHByaW1hcnktY29sb3IsIDIwJSk7XHJcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcclxufVxyXG5cclxuLmNhbmNlbC1idG4ge1xyXG4gIGJhY2tncm91bmQ6ICRkYW5nZXItY29sb3I7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4uY2FuY2VsLWJ0bjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZDogJGRhbmdlci1ob3ZlcjtcclxufVxyXG5cclxuLmJ1dHRvbi1ncm91cCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgZ2FwOiAxMHB4O1xyXG59XHJcblxyXG5AbWVkaWEgKG1heC13aWR0aDogNDgwcHgpIHtcclxuICAuYnV0dG9uLWdyb3VwIHtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgfVxyXG5cclxuICBidXR0b24ge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG59XHJcblxyXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICBpbnB1dCwgc2VsZWN0IHtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgIHBhZGRpbmc6IDhweDtcclxuICB9XHJcblxyXG4gIGJ1dHRvbiB7XHJcbiAgICBwYWRkaW5nOiA4cHggMTJweDtcclxuICAgIGZvbnQtc2l6ZTogMTRweDtcclxuICB9XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","PersonFormComponent","constructor","fb","personService","route","router","http","isEditing","personForm","group","active","address","required","city","contactType","email","name","phone","pattern","state","zipCode","minLength","maxLength","ngOnInit","personId","Number","snapshot","paramMap","get","getPersonById","subscribe","person","reset","onSubmit","invalid","markAllAsTouched","value","console","log","JSON","stringify","confirmation","window","confirm","updatePerson","next","response","alert","navigate","error","err","createPerson","fetchAddress","length","data","erro","patchValue","logradouro","bairro","localidade","uf","onCancel","ɵɵdirectiveInject","i1","FormBuilder","i2","PersonService","i3","ActivatedRoute","Router","i4","HttpClient","selectors","decls","vars","consts","template","PersonFormComponent_Template","rf","ctx","ɵɵlistener","PersonFormComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵtemplate","PersonFormComponent_div_12_Template","PersonFormComponent_div_17_Template","PersonFormComponent_div_28_Template","PersonFormComponent_Template_input_blur_32_listener","PersonFormComponent_Template_button_click_48_listener","ɵɵadvance","ɵɵtextInterpolate","ɵɵproperty","tmp_2_0","touched","tmp_3_0","tmp_7_0","ɵɵtextInterpolate1"],"sources":["C:\\Users\\Asus\\Desktop\\ContactList-Front-end-main\\src\\app\\components\\person-form\\person-form.component.ts","C:\\Users\\Asus\\Desktop\\ContactList-Front-end-main\\src\\app\\components\\person-form\\person-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { PersonService } from '../../services/person.service';\r\nimport { Person } from '../../models/person';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-person-form',\r\n  templateUrl: './person-form.component.html',\r\n  styleUrls: ['./person-form.component.scss']\r\n})\r\nexport class PersonFormComponent implements OnInit {\r\n  personForm: FormGroup;\r\n  isEditing = false;\r\n  personId?: number;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private personService: PersonService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private http: HttpClient\r\n  ) {\r\n    this.personForm = this.fb.group({\r\n      active: [true],\r\n      address: ['', Validators.required],\r\n      city: ['', Validators.required],\r\n      contactType: [null, Validators.required], \r\n      email: ['', [Validators.required, Validators.email]],\r\n      name: ['', Validators.required],\r\n      phone: ['', [Validators.required, Validators.pattern('^[0-9]{10,11}$')]],\r\n      state: ['', Validators.required],\r\n      zipCode: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(8)]],\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.personId = Number(this.route.snapshot.paramMap.get('id'));\r\n    if (this.personId) {\r\n      this.isEditing = true;\r\n      this.personService.getPersonById(this.personId).subscribe(person => {\r\n        this.personForm.reset(person);\r\n      });\r\n    }\r\n  }\r\n\r\n  onSubmit(): void {\r\n    if (this.personForm.invalid) {\r\n      this.personForm.markAllAsTouched();\r\n      return;\r\n    }\r\n  \r\n    const person: Person = this.personForm.value;\r\n    console.log('Enviando para a API:', JSON.stringify(person, null, 2));\r\n  \r\n    const confirmation = window.confirm('Tem certeza que deseja atualizar esta pessoa?');\r\n    \r\n    if (confirmation) {\r\n      if (this.isEditing) {\r\n        this.personService.updatePerson(this.personId!, person).subscribe({\r\n          next: (response) => {\r\n            console.log('Pessoa atualizada com sucesso:', response);\r\n            alert('Pessoa atualizada com sucesso!');\r\n            this.router.navigate(['/person-table']);\r\n          },\r\n          error: (err) => {\r\n            console.error('Erro ao atualizar pessoa:', err);\r\n            alert('Erro ao atualizar pessoa. Tente novamente.');\r\n          }\r\n        });\r\n      } else {\r\n        this.personService.createPerson(person).subscribe({\r\n          next: () => {\r\n            console.log('Pessoa criada com sucesso:', person);\r\n            this.router.navigate(['/person-table']);\r\n          },\r\n          error: (err) => {\r\n            console.error('Erro ao criar pessoa:', err);\r\n            alert('Erro ao criar pessoa. Tente novamente.');\r\n          }\r\n        });\r\n      }\r\n    }\r\n  }\r\n  \r\n\r\n  fetchAddress(): void {\r\n    const zipCode = this.personForm.get('zipCode')?.value;\r\n    if (zipCode.length === 8) {\r\n      this.http.get<any>(`https://viacep.com.br/ws/${zipCode}/json/`).subscribe(data => {\r\n        if (!data.erro) {\r\n          this.personForm.patchValue({\r\n            address: `${data.logradouro}, ${data.bairro}`,\r\n            city: data.localidade,\r\n            state: data.uf\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.router.navigate(['/person-table']);\r\n  }\r\n}\r\n","<div class=\"container\">\n  <h2>{{ isEditing ? 'Edit Person' : 'Add Person' }}</h2>\n  \n  <form [formGroup]=\"personForm\" (ngSubmit)=\"onSubmit()\">\n    <div class=\"form-group\">\n      <label for=\"name\">Name</label>\n      <input id=\"name\" formControlName=\"name\" type=\"text\" required />\n    </div>\n    \n    <div class=\"form-group\">\n      <label for=\"email\">Email</label>\n      <input id=\"email\" formControlName=\"email\" type=\"email\" required />\n      <div class=\"error-message\" *ngIf=\"personForm.get('email')?.invalid && personForm.get('email')?.touched\">\n        Email inválido\n      </div>\n    </div>\n    \n    <div class=\"form-group\">\n      <label for=\"phone\">Contact Number</label>\n      <input id=\"phone\" formControlName=\"phone\" type=\"text\" required />\n      <div class=\"error-message\" *ngIf=\"personForm.get('phone')?.invalid && personForm.get('phone')?.touched\">\n        O telefone deve ter 10 ou 11 dígitos numéricos.\n      </div>\n    </div>\n    \n    <!-- Campo para selecionar o tipo de contato -->\n    <div class=\"form-group\">\n      <label for=\"contactType\">Contact Type</label>\n      <select id=\"contactType\" formControlName=\"contactType\">\n        <option [ngValue]=\"1\">Telefone</option>\n        <option [ngValue]=\"2\">Email</option>\n        <option [ngValue]=\"3\">Endereço</option>\n      </select>\n      <div *ngIf=\"personForm.get('contactType')?.invalid && personForm.get('contactType')?.touched\" class=\"error-message\">\n        Tipo de contato é obrigatório.\n      </div>\n    </div>\n\n    <div class=\"form-group\">\n      <label for=\"zipCode\">zipCode</label>\n      <input id=\"zipCode\" formControlName=\"zipCode\" type=\"text\" (blur)=\"fetchAddress()\" required />\n    </div>\n    \n    <div class=\"form-group\">\n      <label for=\"address\">Address</label>\n      <input id=\"address\" formControlName=\"address\" type=\"text\" required />\n    </div>\n    \n    <div class=\"form-group\">\n      <label for=\"city\">City</label>\n      <input id=\"city\" formControlName=\"city\" type=\"text\" required />\n    </div>\n    \n    <div class=\"form-group\">\n      <label for=\"state\">State</label>\n      <input id=\"state\" formControlName=\"state\" type=\"text\" required />\n    </div>\n    \n    <div class=\"button-group\">\n      <button type=\"submit\" class=\"save-btn\" [disabled]=\"personForm.invalid\">\n        {{ isEditing ? 'Update' : 'Save' }}\n      </button>      \n      <button type=\"button\" class=\"cancel-btn\" (click)=\"onCancel()\">Cancel</button>\n    </div>\n  </form>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}