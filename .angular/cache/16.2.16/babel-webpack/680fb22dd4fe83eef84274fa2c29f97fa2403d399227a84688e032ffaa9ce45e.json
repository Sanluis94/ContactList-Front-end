{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PersonService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8080/api/people';\n  }\n  getPeople() {\n    return this.http.get(this.apiUrl);\n  }\n  getPersonById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  createPerson(person) {\n    return this.http.post(this.apiUrl, person);\n  }\n  updatePerson(id, person) {\n    return this.http.put(`${this.apiUrl}/${id}`, person);\n  }\n  deletePerson(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function PersonService_Factory(t) {\n      return new (t || PersonService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PersonService,\n      factory: PersonService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["PersonService","constructor","http","apiUrl","getPeople","get","getPersonById","id","createPerson","person","post","updatePerson","put","deletePerson","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Asus\\Desktop\\ContactList-Front-end-main\\src\\app\\services\\person.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Person } from '../models/person';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PersonService {\r\n  private apiUrl = 'http://localhost:8080/api/people';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getPeople(): Observable<Person[]> {\r\n    return this.http.get<Person[]>(this.apiUrl);\r\n  }\r\n\r\n  getPersonById(id: number): Observable<Person> {\r\n    return this.http.get<Person>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  createPerson(person: Person): Observable<Person> {\r\n    return this.http.post<Person>(this.apiUrl, person);\r\n  }\r\n\r\n  updatePerson(id: number, person: Person): Observable<Person> {\r\n    return this.http.put<Person>(`${this.apiUrl}/${id}`, person);\r\n  }\r\n\r\n  deletePerson(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n"],"mappings":";;AAQA,OAAM,MAAOA,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,MAAM,GAAG,kCAAkC;EAEZ;EAEvCC,SAASA,CAAA;IACP,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAW,IAAI,CAACF,MAAM,CAAC;EAC7C;EAEAG,aAAaA,CAACC,EAAU;IACtB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAS,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACtD;EAEAC,YAAYA,CAACC,MAAc;IACzB,OAAO,IAAI,CAACP,IAAI,CAACQ,IAAI,CAAS,IAAI,CAACP,MAAM,EAAEM,MAAM,CAAC;EACpD;EAEAE,YAAYA,CAACJ,EAAU,EAAEE,MAAc;IACrC,OAAO,IAAI,CAACP,IAAI,CAACU,GAAG,CAAS,GAAG,IAAI,CAACT,MAAM,IAAII,EAAE,EAAE,EAAEE,MAAM,CAAC;EAC9D;EAEAI,YAAYA,CAACN,EAAU;IACrB,OAAO,IAAI,CAACL,IAAI,CAACY,MAAM,CAAO,GAAG,IAAI,CAACX,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;;;uBAvBWP,aAAa,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAblB,aAAa;MAAAmB,OAAA,EAAbnB,aAAa,CAAAoB,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}